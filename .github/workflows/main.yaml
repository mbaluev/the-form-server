name: Build on DockerHub and Deploy to AWS
on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Create env file
        run: |
          touch .env
          echo TOKEN_SECRET=${{ secrets.TOKEN_SECRET }} >> .env
          echo TOKEN_EXPIRY=${{ vars.TOKEN_EXPIRY }} >> .env
          echo SESSION_SECRET=${{ secrets.SESSION_SECRET }} >> .env
          echo COOKIE_SECRET=${{ secrets.COOKIE_SECRET }} >> .env
          echo WHITELIST_DOMAINS=${{ vars.WHITELIST_DOMAINS }} >> .env
          echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
          echo PORT=${{ vars.PORT }} >> .env
          cat .env
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: mbaluev/the-form-server:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem
      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-51-20-185-40.eu-north-1.compute.amazonaws.com 'sudo docker stop the-form-server || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-51-20-185-40.eu-north-1.compute.amazonaws.com 'sudo docker rm the-form-server || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-51-20-185-40.eu-north-1.compute.amazonaws.com 'sudo docker image prune -a --force'
#          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-51-20-185-40.eu-north-1.compute.amazonaws.com 'sudo docker stop $(sudo docker ps -aq) || true'
#          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-51-20-185-40.eu-north-1.compute.amazonaws.com 'sudo docker rm $(sudo docker ps -aq) || true'
#          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-51-20-185-40.eu-north-1.compute.amazonaws.com 'sudo docker rmi $(sudo docker images -aq) || true'
      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-51-20-185-40.eu-north-1.compute.amazonaws.com 'sudo docker pull mbaluev/the-form-server:latest'
      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-51-20-185-40.eu-north-1.compute.amazonaws.com 'sudo docker run -d --name the-form-server -p 80:8081 mbaluev/the-form-server:latest'
